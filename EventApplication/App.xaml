<Application x:Class="EventApplication.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:EventApplication"
             StartupUri="MainWindow.xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <Application.Resources>
        <Style TargetType="Button" x:Key="ButtonSmall">
            <Setter Property="Width" Value="110"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <!-- Белый цвет текста -->
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#0078D7"/>
            <!-- Синий цвет фона -->
            <Setter Property="BorderBrush" Value="#0078D7"/>
            <!-- Синий цвет границы -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RecognizesAccessKey="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1078D7"/>
                    <!-- Тень на фоне при наведении курсора -->
                    <Setter Property="BorderBrush" Value="#1078D7"/>
                    <!-- Тень на границе при наведении курсора -->
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#0056A3"/>
                    <!-- Цвет фона при нажатии -->
                    <Setter Property="BorderBrush" Value="#0056A3"/>
                    <!-- Цвет границы при нажатии -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="ButtonLarge">
            <Setter Property="Width" Value="250"/>
            <Setter Property="Height" Value="130"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <!-- Исправленное название шрифта -->
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <!-- Белый цвет текста -->
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#0078D7"/>
            <!-- Синий цвет фона -->
            <Setter Property="BorderBrush" Value="#0078D7"/>
            <!-- Синий цвет границы -->
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RecognizesAccessKey="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1078D7"/>
                    <!-- Тень на фоне при наведении курсора -->
                    <Setter Property="BorderBrush" Value="#1078D7"/>
                    <!-- Тень на границе при наведении курсора -->
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#0056A3"/>
                    <!-- Цвет фона при нажатии -->
                    <Setter Property="BorderBrush" Value="#0056A3"/>
                    <!-- Цвет границы при нажатии -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox" x:Key="TextBoxSmall">
            <Setter Property="Width" Value="250"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="Foreground" Value="#0078D7"/>
            <!-- Синий цвет текста -->
            <Setter Property="Background" Value="Transparent"/>
            <!-- Прозрачный фон -->
            <Setter Property="BorderBrush" Value="#0078D7"/>
            <!-- Синий цвет границы -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
            <!-- Отступы вокруг текста -->
            <Setter Property="Margin" Value="5"/>
            <!-- Отступы вокруг TextBox -->
            <Setter Property="Cursor" Value="IBeam"/>
            <!-- Курсор при наведении -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" SnapsToDevicePixels="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#AAAAAA"/>
                    <!-- Серый цвет текста, когда TextBox неактивен -->
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#1078D7"/>
                    <!-- Темнее синий цвет границы при наведении курсора -->
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#1078D7"/>
                    <!-- Темнее синий цвет границы при получении фокуса -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock" x:Key="TextBlockSmall">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Times New Roman Italic"/>
            <Setter Property="Foreground" Value="#0078D7"/>
            <!-- Синий цвет текста -->
            <Setter Property="TextAlignment" Value="Center"/>
            <!-- Выравнивание текста по центру -->
            <Setter Property="Margin" Value="5"/>
            <!-- Отступы вокруг текста -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#1078D7"/>
                    <!-- Темнее синий цвет текста при наведении курсора -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock" x:Key="TextBlockLarge">
            <Setter Property="FontSize" Value="21"/>
            <Setter Property="FontFamily" Value="Times New Roman Italic"/>
            <Setter Property="Foreground" Value="#0078D7"/>
            <!-- Синий цвет текста -->
            <Setter Property="TextAlignment" Value="Center"/>
            <!-- Выравнивание текста по центру -->
            <Setter Property="Margin" Value="10"/>
            <!-- Отступы вокруг текста -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#1078D7"/>
                    <!-- Темнее синий цвет текста при наведении курсора -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="BorderBrush" Value="#0078D7"/>
            <!-- Синий цвет границы -->
            <Setter Property="HorizontalGridLinesBrush" Value="#0078D7"/>
            <!-- Синий цвет горизонтальных линий сетки -->
            <Setter Property="VerticalGridLinesBrush" Value="#0078D7"/>
            <!-- Синий цвет вертикальных линий сетки -->
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="White"/>
                        <!-- Белый фон строк -->
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightCyan"/>
                                <!-- Цвет фона строки при наведении курсора -->
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#E6F7FF"/>
                                <!-- Цвет фона выделенной строки -->
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Padding" Value="4,3,4,3"/>
                        <!-- Отступы вокруг содержимого ячейки -->
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <!-- Прозрачный цвет границы ячейки -->
                        <Setter Property="BorderThickness" Value="1"/>
                        <!-- Толщина границы ячейки -->
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#ff66ccff"/>
                                <!-- Цвет фона выделенной ячейки -->
                                <Setter Property="Foreground" Value="Black"/>
                                <!-- Цвет текста выделенной ячейки -->
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#E6F7FF"/>
                                <!-- Цвет фона ячейки при получении фокуса -->
                                <Setter Property="Foreground" Value="Black"/>
                                <!-- Цвет текста ячейки при получении фокуса -->
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="DatePicker">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Blue"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="DatePickerTextBox">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Blue"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <Style TargetType="CalendarDayButton">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Blue"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="CalendarItem">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Blue"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

    </Application.Resources>
</Application>
